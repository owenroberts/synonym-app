extends layout
block content
	div.menu
		img(src="/images/dots.png")

	div.adjust
		form(method="post", action="/search")
			input(type="hidden",name="start",value=start)
			input(type="hidden",name="end", value=end)
			label(for="nodelimit")="Results"
			input(type="range",min=1,max=20,value=nodelimit,id="nodelimit",name="nodelimit")
			label(for="synonymlevel")="Search"
			input(type="range",min=1,max=20,value=synonymlevel,id="synonymlevel",name="synonymlevel")
			input(type="submit", value="Enter")

	div.nodes
		each node, index in path
			div.node-dad.draggable
				div.node=node.node
				if node.synonyms
					if index != 0
						each synonym in node.synonyms
							div.synonym=synonym

	// javascript // 
	script(type='text/javascript').
		$( '.draggable' ).draggable({ 
			scroll:false,
			axis: "x", 
			containment:[-1000,0,64,0],
			drag: function() {
				$('.draggable')
					.removeClass('hover')
					.css({
						top:0,
						left:0
					});
				$(this).addClass('hover');
			}
		});

		var nodes = $('.node-dad');
		for (var i = 0; i < nodes.length; i++) {
			var showNode = function(num) {
				setTimeout( function() {
					$(nodes[num]).fadeIn();
				}, num*500);
			}(i);
		}
		function openMenu() {
			if ($('.adjust').css('display') == 'none')
				$('.adjust').slideDown();
			else 
				$('.adjust').slideUp();
		}
		$('.menu').on('click', openMenu);
		$('input[value="Enter"]').on('click', function(e) {
			$('.adjust').slideUp();
			for (var i = 1; i < nodes.length - 1; i++) 
				$(nodes[i]).fadeOut();
			var ldr = $('<img>').attr({'class':'ldr', 'src':'images/ldr.gif'});
			$(nodes[0]).after(ldr);
		});
		function makeNewChain() {
			var synonym = $(this).html();
			var parent = $(this).parent().index();
			var word = $(this).parent().find('.node').html();
			console.log(word);
			var data = !{JSON.stringify(path)};
			var oldpath = data.slice(0, parent);
			var container = $('<div>')
				.attr('id', 'modified-search');
			var form = $('<form>')
				.attr({
					'method':'post',
					'action':'/search/modified',
				});
			var start = $('<input>')
				.attr({
					'name':'start',
					'type':'hidden',
					'value':synonym
				});
			var end = $('<input>')
				.attr({
					'name':'end',
					'type':'hidden',
					'value':"#{end}"
				});
			var nodelimit = $('<input>')
				.attr({
					'name':'nodelimit',
					'type':'hidden',
					'value':10
				});
			var synonymlevel = $('<input>')
				.attr({
					'name':'synonymlevel',
					'type':'hidden',
					'value':10
				});
			var path = $('<input>')
				.attr({
					'name':'path',
					'type':'hidden',
					'value':JSON.stringify(oldpath)
					});
			var submit = $('<input>')
				.attr({
					'type':'submit',
					'value':"Replace " + word + " with " + synonym + "?"
				});
			var cancel = $('<button>')
				.attr('id', 'cancel')
				.html('Cancel');
			$(cancel).on('click', function() {
				$('#modified-search').remove();
			});
			form.append(start).append(end).append(nodelimit).append(synonymlevel).append(path).append(submit);
			container.append(form);
			container.append(cancel);
			$('body').append(container);
		}
		$('.synonym').on('click', makeNewChain);
		document.ontouchstart = function(e){ 
    		e.preventDefault(); 
		}
		document.ontouchmove = function(e){ 
    		e.preventDefault(); 
		}















